$rem-baseline: 100px !default;
$rem-fallback: false !default;
$rem-px-only: false !default;
@function rem-separator($list, $separator: false) {
    @if $separator=="comma" or $separator=="space" {
        @return append($list, null, $separator);
    }
    @if function-exists("list-separator")==true {
        @return list-separator($list);
    }
    // list-separator polyfill by Hugo Giraudel (https://sass-compatibility.github.io/#list_separator_function)
    $test-list: ();
    @each $item in $list {
        $test-list: append($test-list, $item, space);
    }
    @return if($test-list==$list, space, comma);
}

@mixin rem-baseline($zoom: 100%) {
    font-size: $zoom / 16px * $rem-baseline;
}

@function rem-convert($to, $values...) {
    $result: ();
    $separator: rem-separator($values);
    @each $value in $values {
        @if type-of($value)=="number" and unit($value)=="rem" and $to=="px" {
            $result: append($result, $value / 1rem * $rem-baseline, $separator);
        }
        @else if type-of($value)=="number" and unit($value)=="px" and $to=="rem" {
            $result: append($result, $value / $rem-baseline * 1rem, $separator);
        }
        @else if type-of($value)=="list" {
            $value-separator: rem-separator($value);
            $value: rem-convert($to, $value...);
            $value: rem-separator($value, $value-separator);
            $result: append($result, $value, $separator);
        }
        @else {
            $result: append($result, $value, $separator);
        }
    }
    @return if(length($result)==1, nth($result, 1), $result);
}

@function rem($values...) {
    @if $rem-px-only {
        @return rem-convert(px, $values...);
    }
    @else {
        @return rem-convert(rem, $values...);
    }
}

@mixin rem($properties, $values...) {
    @if type-of($properties)=="map" {
        @each $property in map-keys($properties) {
            @include rem($property, map-get($properties, $property));
        }
    }
    @else {
        @each $property in $properties {
            @if $rem-fallback or $rem-px-only {
                #{$property}: rem-convert(px, $values...);
            }
            @if not $rem-px-only {
                #{$property}: rem-convert(rem, $values...);
            }
        }
    }
}
body{
    background: linear-gradient(#07143a, #63afef);
    background: -webkit-linear-gradient(#07143a, #63afef);
    background: -moz-linear-gradient(#07143a, #63afef);
    background: -ms-linear-gradient(#07143a, #63afef);
    background: -o-linear-gradient(#07143a, #63afef);
    background-attachment: fixed;
    height: 100vh;
}

.hide{
    display: none;
}
.renrenyouting{
    padding-top: 0.92rem;
    padding-bottom: 0.92rem;
}
.top {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 0.92rem;
    z-index: 10;
    background: #0b1941;
    border-bottom: 1px solid rgba(255,255,255,.3);
}
.top .back {
    position: absolute;
    left: 0.15rem;
    top: 0;
    width: 0.5rem;
    height: 0.92rem;
}
.top .back-arr {
    display: block;
    width: 0.21rem;
    height: 0.21rem;
    margin: 0.35rem 0 0 0.18rem;
    border: 0.04rem solid #fff;
    border-width: 0.04rem 0 0 0.04rem;
    -webkit-transform: rotate(-45deg);
    -moz-transform: rotate(-45deg);
    transform: rotate(-45deg);
}
.top h2 {
    line-height: 0.92rem;
    font-size: 0.3rem;
    color: #fff;
    text-align: center;
    letter-spacing: 2px;
    text-indent: 2px;
}

.fans-list{
    padding: 0 rem(26px);
    .fans-item{
        margin-top: rem(53px);
        height: rem(86px);
        display: flex;
        display: -webkit-flex;
        align-items: center;
    }
}
.fans-pic{
    width: rem(86px);
    height: rem(86px);
    border-radius: 50%;
    overflow: hidden;
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    -ms-border-radius: 50%;
    -o-border-radius: 50%;
    img{
        width: 100%;
        height: 100%;
    }
}
.fans-info{
    flex: 1;
    margin-left: rem(13px);
    color: #FFFFFF;
    letter-spacing: 1px;
    .name{
        font-size: rem(32px);
        height: rem(32px);
        line-height: rem(34px);
    }
    .sign{
        height: rem(26px);
        line-height: rem(28px);
        margin-top: rem(20px);
        font-size: rem(26px);
        max-width: rem(445px);
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
}
.follow-state{
    margin: auto 0 0.05rem auto;
    width: rem(117px);
    height: rem(49px);
    text-align: center;
    line-height: rem(52px);
    font-size: rem(26px);
    color: #FFFFFF;
    letter-spacing: 2px;
    text-indent: 2px;
    border-radius: 3px;
    -webkit-border-radius: 3px;
    -moz-border-radius: 3px;
    -ms-border-radius: 3px;
    -o-border-radius: 3px;
}
.is-follow{
    background: #717171;
}
.not-follow{
    background: #e81642;
}
